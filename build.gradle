buildscript {
    ext {
        depManagementVersion = "1.0.8.RELEASE"
        springBootVersion = '2.1.5.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:${depManagementVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7")
    }
}

allprojects {
    group 'com.teseus'
    version '1.0-SNAPSHOT'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.sonarqube'

    sourceCompatibility = '11.0'
    targetCompatibility = '11.0'

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    dependencies {
        compile("com.querydsl:querydsl-jpa")
        compile("com.querydsl:querydsl-apt")

        compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.2.15'
        compile 'com.github.davidmoten:rxjava2-extras:0.1.36'

        compile('org.apache.httpcomponents:httpasyncclient')
        compile 'org.modelmapper:modelmapper:2.3.2'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        compile 'org.projectlombok:lombok'
        testCompileOnly("org.projectlombok:lombok")
        annotationProcessor("org.projectlombok:lombok")
        testAnnotationProcessor("org.projectlombok:lombok")

        compile 'com.google.guava:guava:23.0'

        compile 'cglib:cglib-nodep:3.2.10'
        compile 'org.junit.jupiter:junit-jupiter-api:5.6.0'
        testCompileOnly 'org.spockframework:spock-core:1.2-groovy-2.5'
        testCompileOnly 'org.spockframework:spock-spring:1.2-groovy-2.5'
    }

    ext {
    }
}

project(':freecoding'){
    bootJar{ enabled = false }
    jar {enabled = true }

    dependencies{
        compile('org.springframework.boot:spring-boot-starter-web')
        compile 'org.springframework.boot:spring-boot-starter-data-jpa'
        compile 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'

        runtimeOnly 'com.h2database:h2'
        compile('mysql:mysql-connector-java')

        compile('org.apache.httpcomponents:httpasyncclient')
        compile 'org.modelmapper:modelmapper:2.3.2'
    }
}

project(':api'){
    bootJar{ enabled = false }
    jar {enabled = true }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
//        implementation 'org.flywaydb:flyway-core'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'mysql:mysql-connector-java'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'io.projectreactor:reactor-test'
    }

    test {
        useJUnitPlatform()
    }
}
